#pragma once

#define INTERRUPT_HANDLER(isr_number)                      \
	extern "C" void isr_##isr_number##_entry();            \
	static void isr_##isr_number##_entry_wrapper() __used; \
	__naked __noreturn void isr_##isr_number##_entry_wrapper()        \
	{                                                      \
		asm(".globl isr_" #isr_number "_entry\n"           \
		    "isr_" #isr_number "_entry:\n"                 \
		    "    pushl $0\n"                               \
		    "    pushl $" #isr_number "\n"                 \
		    "    jmp common_interrupt_handler_entry\n");   \
	}

#define ERROR_HANDLER(isr_number)                          \
	extern "C" void isr_##isr_number##_entry();            \
	static void isr_##isr_number##_entry_wrapper() __used; \
	__naked __noreturn void isr_##isr_number##_entry_wrapper()        \
	{                                                      \
		asm(".globl isr_" #isr_number "_entry\n"           \
		    "isr_" #isr_number "_entry:\n"                 \
		    "    pushl $" #isr_number "\n"                 \
		    "    jmp common_interrupt_handler_entry\n");   \
	}

INTERRUPT_HANDLER(0x00);
INTERRUPT_HANDLER(0x01);
INTERRUPT_HANDLER(0x02);
INTERRUPT_HANDLER(0x03);
INTERRUPT_HANDLER(0x04);
INTERRUPT_HANDLER(0x05);
INTERRUPT_HANDLER(0x06);
INTERRUPT_HANDLER(0x07);
ERROR_HANDLER(0x08);
INTERRUPT_HANDLER(0x09);
ERROR_HANDLER(0x0A);
ERROR_HANDLER(0x0B);
ERROR_HANDLER(0x0C);
ERROR_HANDLER(0x0D);
ERROR_HANDLER(0x0E);
INTERRUPT_HANDLER(0x0F);
INTERRUPT_HANDLER(0x10);
ERROR_HANDLER(0x11);
INTERRUPT_HANDLER(0x12);
INTERRUPT_HANDLER(0x13);
INTERRUPT_HANDLER(0x14);
INTERRUPT_HANDLER(0x15);
INTERRUPT_HANDLER(0x16);
INTERRUPT_HANDLER(0x17);
INTERRUPT_HANDLER(0x18);
INTERRUPT_HANDLER(0x19);
INTERRUPT_HANDLER(0x1A);
INTERRUPT_HANDLER(0x1B);
INTERRUPT_HANDLER(0x1C);
INTERRUPT_HANDLER(0x1D);
INTERRUPT_HANDLER(0x1E);
INTERRUPT_HANDLER(0x1F);

INTERRUPT_HANDLER(0x20);
INTERRUPT_HANDLER(0x21);
INTERRUPT_HANDLER(0x22);
INTERRUPT_HANDLER(0x23);
INTERRUPT_HANDLER(0x24);
INTERRUPT_HANDLER(0x25);
INTERRUPT_HANDLER(0x26);
INTERRUPT_HANDLER(0x27);
INTERRUPT_HANDLER(0x28);
INTERRUPT_HANDLER(0x29);
INTERRUPT_HANDLER(0x2A);
INTERRUPT_HANDLER(0x2B);
INTERRUPT_HANDLER(0x2C);
INTERRUPT_HANDLER(0x2D);
INTERRUPT_HANDLER(0x2E);
INTERRUPT_HANDLER(0x2F);

INTERRUPT_HANDLER(0x30);
INTERRUPT_HANDLER(0x31);
INTERRUPT_HANDLER(0x32);
INTERRUPT_HANDLER(0x33);
INTERRUPT_HANDLER(0x34);
INTERRUPT_HANDLER(0x35);
INTERRUPT_HANDLER(0x36);
INTERRUPT_HANDLER(0x37);
INTERRUPT_HANDLER(0x38);
INTERRUPT_HANDLER(0x39);
INTERRUPT_HANDLER(0x3A);
INTERRUPT_HANDLER(0x3B);
INTERRUPT_HANDLER(0x3C);
INTERRUPT_HANDLER(0x3D);
INTERRUPT_HANDLER(0x3E);
INTERRUPT_HANDLER(0x3F);

INTERRUPT_HANDLER(0x40);
INTERRUPT_HANDLER(0x41);
INTERRUPT_HANDLER(0x42);
INTERRUPT_HANDLER(0x43);
INTERRUPT_HANDLER(0x44);
INTERRUPT_HANDLER(0x45);
INTERRUPT_HANDLER(0x46);
INTERRUPT_HANDLER(0x47);
INTERRUPT_HANDLER(0x48);
INTERRUPT_HANDLER(0x49);
INTERRUPT_HANDLER(0x4A);
INTERRUPT_HANDLER(0x4B);
INTERRUPT_HANDLER(0x4C);
INTERRUPT_HANDLER(0x4D);
INTERRUPT_HANDLER(0x4E);
INTERRUPT_HANDLER(0x4F);

INTERRUPT_HANDLER(0x50);
INTERRUPT_HANDLER(0x51);
INTERRUPT_HANDLER(0x52);
INTERRUPT_HANDLER(0x53);
INTERRUPT_HANDLER(0x54);
INTERRUPT_HANDLER(0x55);
INTERRUPT_HANDLER(0x56);
INTERRUPT_HANDLER(0x57);
INTERRUPT_HANDLER(0x58);
INTERRUPT_HANDLER(0x59);
INTERRUPT_HANDLER(0x5A);
INTERRUPT_HANDLER(0x5B);
INTERRUPT_HANDLER(0x5C);
INTERRUPT_HANDLER(0x5D);
INTERRUPT_HANDLER(0x5E);
INTERRUPT_HANDLER(0x5F);

INTERRUPT_HANDLER(0x60);
INTERRUPT_HANDLER(0x61);
INTERRUPT_HANDLER(0x62);
INTERRUPT_HANDLER(0x63);
INTERRUPT_HANDLER(0x64);
INTERRUPT_HANDLER(0x65);
INTERRUPT_HANDLER(0x66);
INTERRUPT_HANDLER(0x67);
INTERRUPT_HANDLER(0x68);
INTERRUPT_HANDLER(0x69);
INTERRUPT_HANDLER(0x6A);
INTERRUPT_HANDLER(0x6B);
INTERRUPT_HANDLER(0x6C);
INTERRUPT_HANDLER(0x6D);
INTERRUPT_HANDLER(0x6E);
INTERRUPT_HANDLER(0x6F);

INTERRUPT_HANDLER(0x70);
INTERRUPT_HANDLER(0x71);
INTERRUPT_HANDLER(0x72);
INTERRUPT_HANDLER(0x73);
INTERRUPT_HANDLER(0x74);
INTERRUPT_HANDLER(0x75);
INTERRUPT_HANDLER(0x76);
INTERRUPT_HANDLER(0x77);
INTERRUPT_HANDLER(0x78);
INTERRUPT_HANDLER(0x79);
INTERRUPT_HANDLER(0x7A);
INTERRUPT_HANDLER(0x7B);
INTERRUPT_HANDLER(0x7C);
INTERRUPT_HANDLER(0x7D);
INTERRUPT_HANDLER(0x7E);
INTERRUPT_HANDLER(0x7F);

INTERRUPT_HANDLER(0x80);
INTERRUPT_HANDLER(0x81);
INTERRUPT_HANDLER(0x82);
INTERRUPT_HANDLER(0x83);
INTERRUPT_HANDLER(0x84);
INTERRUPT_HANDLER(0x85);
INTERRUPT_HANDLER(0x86);
INTERRUPT_HANDLER(0x87);
INTERRUPT_HANDLER(0x88);
INTERRUPT_HANDLER(0x89);
INTERRUPT_HANDLER(0x8A);
INTERRUPT_HANDLER(0x8B);
INTERRUPT_HANDLER(0x8C);
INTERRUPT_HANDLER(0x8D);
INTERRUPT_HANDLER(0x8E);
INTERRUPT_HANDLER(0x8F);

INTERRUPT_HANDLER(0x90);
INTERRUPT_HANDLER(0x91);
INTERRUPT_HANDLER(0x92);
INTERRUPT_HANDLER(0x93);
INTERRUPT_HANDLER(0x94);
INTERRUPT_HANDLER(0x95);
INTERRUPT_HANDLER(0x96);
INTERRUPT_HANDLER(0x97);
INTERRUPT_HANDLER(0x98);
INTERRUPT_HANDLER(0x99);
INTERRUPT_HANDLER(0x9A);
INTERRUPT_HANDLER(0x9B);
INTERRUPT_HANDLER(0x9C);
INTERRUPT_HANDLER(0x9D);
INTERRUPT_HANDLER(0x9E);
INTERRUPT_HANDLER(0x9F);

INTERRUPT_HANDLER(0xA0);
INTERRUPT_HANDLER(0xA1);
INTERRUPT_HANDLER(0xA2);
INTERRUPT_HANDLER(0xA3);
INTERRUPT_HANDLER(0xA4);
INTERRUPT_HANDLER(0xA5);
INTERRUPT_HANDLER(0xA6);
INTERRUPT_HANDLER(0xA7);
INTERRUPT_HANDLER(0xA8);
INTERRUPT_HANDLER(0xA9);
INTERRUPT_HANDLER(0xAA);
INTERRUPT_HANDLER(0xAB);
INTERRUPT_HANDLER(0xAC);
INTERRUPT_HANDLER(0xAD);
INTERRUPT_HANDLER(0xAE);
INTERRUPT_HANDLER(0xAF);

INTERRUPT_HANDLER(0xB0);
INTERRUPT_HANDLER(0xB1);
INTERRUPT_HANDLER(0xB2);
INTERRUPT_HANDLER(0xB3);
INTERRUPT_HANDLER(0xB4);
INTERRUPT_HANDLER(0xB5);
INTERRUPT_HANDLER(0xB6);
INTERRUPT_HANDLER(0xB7);
INTERRUPT_HANDLER(0xB8);
INTERRUPT_HANDLER(0xB9);
INTERRUPT_HANDLER(0xBA);
INTERRUPT_HANDLER(0xBB);
INTERRUPT_HANDLER(0xBC);
INTERRUPT_HANDLER(0xBD);
INTERRUPT_HANDLER(0xBE);
INTERRUPT_HANDLER(0xBF);

INTERRUPT_HANDLER(0xC0);
INTERRUPT_HANDLER(0xC1);
INTERRUPT_HANDLER(0xC2);
INTERRUPT_HANDLER(0xC3);
INTERRUPT_HANDLER(0xC4);
INTERRUPT_HANDLER(0xC5);
INTERRUPT_HANDLER(0xC6);
INTERRUPT_HANDLER(0xC7);
INTERRUPT_HANDLER(0xC8);
INTERRUPT_HANDLER(0xC9);
INTERRUPT_HANDLER(0xCA);
INTERRUPT_HANDLER(0xCB);
INTERRUPT_HANDLER(0xCC);
INTERRUPT_HANDLER(0xCD);
INTERRUPT_HANDLER(0xCE);
INTERRUPT_HANDLER(0xCF);

INTERRUPT_HANDLER(0xD0);
INTERRUPT_HANDLER(0xD1);
INTERRUPT_HANDLER(0xD2);
INTERRUPT_HANDLER(0xD3);
INTERRUPT_HANDLER(0xD4);
INTERRUPT_HANDLER(0xD5);
INTERRUPT_HANDLER(0xD6);
INTERRUPT_HANDLER(0xD7);
INTERRUPT_HANDLER(0xD8);
INTERRUPT_HANDLER(0xD9);
INTERRUPT_HANDLER(0xDA);
INTERRUPT_HANDLER(0xDB);
INTERRUPT_HANDLER(0xDC);
INTERRUPT_HANDLER(0xDD);
INTERRUPT_HANDLER(0xDE);
INTERRUPT_HANDLER(0xDF);

INTERRUPT_HANDLER(0xE0);
INTERRUPT_HANDLER(0xE1);
INTERRUPT_HANDLER(0xE2);
INTERRUPT_HANDLER(0xE3);
INTERRUPT_HANDLER(0xE4);
INTERRUPT_HANDLER(0xE5);
INTERRUPT_HANDLER(0xE6);
INTERRUPT_HANDLER(0xE7);
INTERRUPT_HANDLER(0xE8);
INTERRUPT_HANDLER(0xE9);
INTERRUPT_HANDLER(0xEA);
INTERRUPT_HANDLER(0xEB);
INTERRUPT_HANDLER(0xEC);
INTERRUPT_HANDLER(0xED);
INTERRUPT_HANDLER(0xEE);
INTERRUPT_HANDLER(0xEF);

INTERRUPT_HANDLER(0xF0);
INTERRUPT_HANDLER(0xF1);
INTERRUPT_HANDLER(0xF2);
INTERRUPT_HANDLER(0xF3);
INTERRUPT_HANDLER(0xF4);
INTERRUPT_HANDLER(0xF5);
INTERRUPT_HANDLER(0xF6);
INTERRUPT_HANDLER(0xF7);
INTERRUPT_HANDLER(0xF8);
INTERRUPT_HANDLER(0xF9);
INTERRUPT_HANDLER(0xFA);
INTERRUPT_HANDLER(0xFB);
INTERRUPT_HANDLER(0xFC);
INTERRUPT_HANDLER(0xFD);
INTERRUPT_HANDLER(0xFE);
INTERRUPT_HANDLER(0xFF);
